<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.credit.service.dao.BankCreditApproveackNotifyRequestMapper" >
  <resultMap id="BaseResultMap" type="com.credit.service.model.entity.BankCreditApproveackNotifyRequest" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="requestId" property="requestId" jdbcType="VARCHAR" />
    <result column="applyNo" property="applyNo" jdbcType="VARCHAR" />
    <result column="certNo" property="certNo" jdbcType="VARCHAR" />
    <result column="certName" property="certName" jdbcType="VARCHAR" />
    <result column="certType" property="certType" jdbcType="VARCHAR" />
    <result column="platformAccess" property="platformAccess" jdbcType="VARCHAR" />
    <result column="platformAdmit" property="platformAdmit" jdbcType="VARCHAR" />
    <result column="platformRateLimit" property="platformRateLimit" jdbcType="VARCHAR" />
    <result column="platformRateBottom" property="platformRateBottom" jdbcType="VARCHAR" />
    <result column="businessModel" property="businessModel" jdbcType="VARCHAR" />
    <result column="extInfo" property="extInfo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbg.generated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbg.generated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbg.generated
    -->
    id, requestId, applyNo, certNo, certName, certType, platformAccess, platformAdmit, 
    platformRateLimit, platformRateBottom, businessModel, extInfo
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.credit.service.dao.example.BankCreditApproveackNotifyRequestExample" >
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_credit_approveack_notify_request
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.credit.service.dao.example.BankCreditApproveackNotifyRequestExample" >
    <!--
      WARNING - @mbg.generated
    -->
    delete from bank_credit_approveack_notify_request
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.credit.service.dao.example.BankCreditApproveackNotifyRequestExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from bank_credit_approveack_notify_request
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbg.generated
    -->
    update bank_credit_approveack_notify_request
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.requestid != null" >
        requestId = #{record.requestid,jdbcType=VARCHAR},
      </if>
      <if test="record.applyno != null" >
        applyNo = #{record.applyno,jdbcType=VARCHAR},
      </if>
      <if test="record.certno != null" >
        certNo = #{record.certno,jdbcType=VARCHAR},
      </if>
      <if test="record.certname != null" >
        certName = #{record.certname,jdbcType=VARCHAR},
      </if>
      <if test="record.certtype != null" >
        certType = #{record.certtype,jdbcType=VARCHAR},
      </if>
      <if test="record.platformaccess != null" >
        platformAccess = #{record.platformaccess,jdbcType=VARCHAR},
      </if>
      <if test="record.platformadmit != null" >
        platformAdmit = #{record.platformadmit,jdbcType=VARCHAR},
      </if>
      <if test="record.platformratelimit != null" >
        platformRateLimit = #{record.platformratelimit,jdbcType=VARCHAR},
      </if>
      <if test="record.platformratebottom != null" >
        platformRateBottom = #{record.platformratebottom,jdbcType=VARCHAR},
      </if>
      <if test="record.businessmodel != null" >
        businessModel = #{record.businessmodel,jdbcType=VARCHAR},
      </if>
      <if test="record.extinfo != null" >
        extInfo = #{record.extinfo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbg.generated
    -->
    update bank_credit_approveack_notify_request
    set id = #{record.id,jdbcType=BIGINT},
      requestId = #{record.requestid,jdbcType=VARCHAR},
      applyNo = #{record.applyno,jdbcType=VARCHAR},
      certNo = #{record.certno,jdbcType=VARCHAR},
      certName = #{record.certname,jdbcType=VARCHAR},
      certType = #{record.certtype,jdbcType=VARCHAR},
      platformAccess = #{record.platformaccess,jdbcType=VARCHAR},
      platformAdmit = #{record.platformadmit,jdbcType=VARCHAR},
      platformRateLimit = #{record.platformratelimit,jdbcType=VARCHAR},
      platformRateBottom = #{record.platformratebottom,jdbcType=VARCHAR},
      businessModel = #{record.businessmodel,jdbcType=VARCHAR},
      extInfo = #{record.extinfo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <insert id="insertSelective" parameterType="com.credit.service.model.entity.BankCreditApproveackNotifyRequest" >
    insert into bank_credit_approveack_notify_request
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="requestId != null" >
        requestId,
      </if>
      <if test="applyNo != null" >
        applyNo,
      </if>
      <if test="certNo != null" >
        certNo,
      </if>
      <if test="certName != null" >
        certName,
      </if>
      <if test="certType != null" >
        certType,
      </if>
      <if test="platformAccess != null" >
        platformAccess,
      </if>
      <if test="platformAdmit != null" >
        platformAdmit,
      </if>
      <if test="platformRateLimit != null" >
        platformRateLimit,
      </if>
      <if test="platformRateBottom != null" >
        platformRateBottom,
      </if>
      <if test="businessModel != null" >
        businessModel,
      </if>
      <if test="extInfo != null" >
        extInfo
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="requestId != null" >
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="applyNo != null" >
        #{applyNo,jdbcType=VARCHAR},
      </if>
      <if test="certNo != null" >
        #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="certName != null" >
        #{certName,jdbcType=VARCHAR},
      </if>
      <if test="certType != null" >
        #{certType,jdbcType=VARCHAR},
      </if>
      <if test="platformAccess != null" >
        #{platformAccess,jdbcType=VARCHAR},
      </if>
      <if test="platformAdmit != null" >
        #{platformAdmit,jdbcType=VARCHAR},
      </if>
      <if test="platformRateLimit != null" >
        #{platformRateLimit,jdbcType=VARCHAR},
      </if>
      <if test="platformRateBottom != null" >
        #{platformRateBottom,jdbcType=VARCHAR},
      </if>
      <if test="businessModel != null" >
        #{businessModel,jdbcType=VARCHAR},
      </if>
      <if test="extInfo != null" >
        #{extInfo,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>

</mapper>