<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.credit.service.dao.BankCreditBodyResponseMapper" >
  <resultMap id="BaseResultMap" type="com.credit.service.model.entity.BankCreditBodyResponse" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="requestId" property="requestid" jdbcType="VARCHAR" />
    <result column="resultCode" property="resultcode" jdbcType="VARCHAR" />
    <result column="resultMsg" property="resultmsg" jdbcType="VARCHAR" />
    <result column="resultStatus" property="resultstatus" jdbcType="VARCHAR" />
    <result column="retry" property="retry" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbg.generated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbg.generated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbg.generated
    -->
    id, requestId, resultCode, resultMsg, resultStatus, retry
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.credit.service.dao.example.BankCreditBodyResponseExample" >
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_credit_body_response
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.credit.service.dao.example.BankCreditBodyResponseExample" >
    <!--
      WARNING - @mbg.generated
    -->
    delete from bank_credit_body_response
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.credit.service.dao.example.BankCreditBodyResponseExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from bank_credit_body_response
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbg.generated
    -->
    update bank_credit_body_response
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.requestid != null" >
        requestId = #{record.requestid,jdbcType=VARCHAR},
      </if>
      <if test="record.resultcode != null" >
        resultCode = #{record.resultcode,jdbcType=VARCHAR},
      </if>
      <if test="record.resultmsg != null" >
        resultMsg = #{record.resultmsg,jdbcType=VARCHAR},
      </if>
      <if test="record.resultstatus != null" >
        resultStatus = #{record.resultstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.retry != null" >
        retry = #{record.retry,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbg.generated
    -->
    update bank_credit_body_response
    set id = #{record.id,jdbcType=BIGINT},
      requestId = #{record.requestid,jdbcType=VARCHAR},
      resultCode = #{record.resultcode,jdbcType=VARCHAR},
      resultMsg = #{record.resultmsg,jdbcType=VARCHAR},
      resultStatus = #{record.resultstatus,jdbcType=VARCHAR},
      retry = #{record.retry,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <select id="selectByRequestId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from bank_credit_body_response
    where requestId=#{requestId}
  </select>

  <insert id="insertSelective" parameterType="com.credit.service.model.entity.BankCreditBodyResponse" >
    insert into bank_credit_body_response
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="applyNo != null" >
        applyNo,
      </if>
      <if test="requestId != null" >
        requestId,
      </if>
      <if test="resultCode != null" >
        resultCode,
      </if>
      <if test="resultMsg != null" >
        resultMsg,
      </if>
      <if test="retry != null" >
        retry
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >

      <if test="applyNo != null" >
        #{applyNo,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null" >
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="resultCode != null" >
        #{resultCode,jdbcType=VARCHAR},
      </if>
      <if test="resultMsg != null" >
        #{resultMsg,jdbcType=VARCHAR},
      </if>
      <if test="retry != null" >
        #{resultMsg,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>

</mapper>